{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50611646806100316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a768463146100715780636f2db99c146100a9578063ba414fa6146100b1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f6102c9565b6100b9610605565b60405190151581526020016100a0565b6000546100b99062010000900460ff1681565b6000546100b99060ff1681565b6100f1610730565b60006040516100ff90610975565b604051809103906000f08015801561011b573d6000803e3d6000fd5b5060085460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561016557600080fd5b505af1158015610179573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156101d657600080fd5b505af11580156101ea573d6000803e3d6000fd5b505060085460405163dfc86b1760e01b81526001600160a01b038581166004830152909116925063dfc86b1791506024016020604051808303816000875af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e919061098f565b600b80546001600160a01b03929092166001600160a01b03199283168117909155600a805490921617905560408051808201909152601a81527f45746865726e617574205661756c74204368616c6c656e67652100000000000060208201526102c690610916565b50565b600a54604051630667f9d760e41b81526001600160a01b03909116600482015260016024820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d70906044016020604051808303816000875af1158015610331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035591906109bf565b90507fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99816040516103b191906040808252600e908201526d1cdd1bdb195b94185cdcdddbdc9960921b6060820152602081019190915260800190565b60405180910390a160095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561041257600080fd5b505af1158015610426573d6000803e3d6000fd5b5050600a5460405163764dad9d60e11b8152600481018590526001600160a01b03909116925063ec9b5b3a9150602401600060405180830381600087803b15801561047057600080fd5b505af1158015610484573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff91906109d8565b1561050c5761050c6109fa565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561056557600080fd5b505af1158015610579573d6000803e3d6000fd5b5050600854600b546040516364416be160e11b81526001600160a01b039182166004820152600094509116915063c882d7c2906024016020604051808303816000875af11580156105ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f291906109d8565b905080610601576106016109fa565b5050565b60008054610100900460ff16156106255750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561072b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916106b3917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610a3c565b60408051601f19818403018152908290526106cd91610a6d565b6000604051808303816000865af19150503d806000811461070a576040519150601f19603f3d011682016040523d82523d6000602084013e61070f565b606091505b509150508080602001905181019061072791906109d8565b9150505b919050565b60405161073c90610982565b604051809103906000f080158015610758573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af11580156107ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f2919061098f565b600980546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b81526004810191909152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561086d57600080fd5b505af1158015610881573d6000803e3d6000fd5b5050600954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201526720ba3a30b1b5b2b960c11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156108fc57600080fd5b505af1158015610910573d6000803e3d6000fd5b50505050565b6102c68160405160240161092a9190610a89565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6104bc80610abd83390190565b61069880610f7983390190565b6000602082840312156109a157600080fd5b81516001600160a01b03811681146109b857600080fd5b9392505050565b6000602082840312156109d157600080fd5b5051919050565b6000602082840312156109ea57600080fd5b815180151581146109b857600080fd5b634e487b7160e01b600052600160045260246000fd5b60005b83811015610a2b578181015183820152602001610a13565b838111156109105750506000910152565b6001600160e01b0319831681528151600090610a5f816004850160208701610a10565b919091016004019392505050565b60008251610a7f818460208701610a10565b9190910192915050565b6020815260008251806020840152610aa8816040850160208701610a10565b601f01601f1916919091016040019291505056fe608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35061045b806100616000396000f3fe60806040526004361061003f5760003560e01c806313af4035146100445780637726f776146100665780638da5cb5b14610096578063d38def5b146100b6575b600080fd5b34801561005057600080fd5b5061006461005f36600461026e565b6100e6565b005b61007961007436600461026e565b61017e565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b50600054610079906001600160a01b031681565b3480156100c257600080fd5b506100d66100d1366004610292565b6101d8565b604051901515815260200161008d565b6000546001600160a01b031633146101335760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000807fb725c171b0105ddbcd168d5f792973d0d369fa55a766a22ffc0863f53c51ef376040516101ae90610249565b908152602001604051809103906000f0801580156101d0573d6000803e3d6000fd5b509392505050565b600080839050806001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024091906102cb565b15949350505050565b610138806102ee83390190565b6001600160a01b038116811461026b57600080fd5b50565b60006020828403121561028057600080fd5b813561028b81610256565b9392505050565b600080604083850312156102a557600080fd5b82356102b081610256565b915060208301356102c081610256565b809150509250929050565b6000602082840312156102dd57600080fd5b8151801515811461028b57600080fdfe608060405234801561001057600080fd5b5060405161013838038061013883398101604081905261002f91610045565b6000805460ff191660019081179091555561005e565b60006020828403121561005757600080fd5b5051919050565b60cc8061006c6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b60666062366004607e565b6068565b005b8060015403607b576000805460ff191690555b50565b600060208284031215608f57600080fd5b503591905056fea264697066735822122005ac26154beaab4dfdb69cd9bf988436fa26b7eacdc12496e941d064d16105e764736f6c634300080f0033a264697066735822122026db14727bcb39016b5256a168684f2cf0fdcb3e7f0da2bf54b95cd194cf1eba64736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610637806100616000396000f3fe6080604052600436106100555760003560e01c806313af40351461005a578063202023d41461007c5780638da5cb5b1461009c578063c882d7c2146100d9578063cf00469514610109578063dfc86b1714610139575b600080fd5b34801561006657600080fd5b5061007a61007536600461059e565b61014c565b005b34801561008857600080fd5b5061007a61009736600461059e565b6101e5565b3480156100a857600080fd5b506000546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b506100f96100f436600461059e565b610255565b60405190151581526020016100d0565b34801561011557600080fd5b506100f961012436600461059e565b60016020526000908152604090205460ff1681565b6100bc61014736600461059e565b610404565b6000546001600160a01b0316331461019a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b0316331461022e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610191565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6001600160a01b0380821660009081526002602052604081208054919290911633146102c35760405162461bcd60e51b815260206004820152601960248201527f57726f6e6720696e7374616e636520666f7220706c61796572000000000000006044820152606401610191565b6001810154600160a01b900460ff161561031f5760405162461bcd60e51b815260206004820152601760248201527f4c6576656c20636f6d706c6574656420616c72656164790000000000000000006044820152606401610191565b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039791906105c2565b156103fb57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166104635760405162461bcd60e51b815260206004820152601460248201527313195d995b081b9bdd081c9959da5cdd195c995960621b6044820152606401610191565b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104d291906105e4565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6001600160a01b038116811461059b57600080fd5b50565b6000602082840312156105b057600080fd5b81356105bb81610586565b9392505050565b6000602082840312156105d457600080fd5b815180151581146105bb57600080fd5b6000602082840312156105f657600080fd5b81516105bb8161058656fea2646970667358221220523e5a4417d83cc55f7d967e04356b019d089872cf237a5e2ec7ccb9e536f7e564736f6c634300080f0033a2646970667358221220be37e3f6b01dcad604deb09e91d171db1cd8b9c749235ec790500612b557e87864736f6c634300080f0033",
    "sourceMap": "547:1092:19:-:0;;;1609:26:5;;;-1:-1:-1;;173:28:0;;;;;547:1092:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a768463146100715780636f2db99c146100a9578063ba414fa6146100b1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f6102c9565b6100b9610605565b60405190151581526020016100a0565b6000546100b99062010000900460ff1681565b6000546100b99060ff1681565b6100f1610730565b60006040516100ff90610975565b604051809103906000f08015801561011b573d6000803e3d6000fd5b5060085460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561016557600080fd5b505af1158015610179573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156101d657600080fd5b505af11580156101ea573d6000803e3d6000fd5b505060085460405163dfc86b1760e01b81526001600160a01b038581166004830152909116925063dfc86b1791506024016020604051808303816000875af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e919061098f565b600b80546001600160a01b03929092166001600160a01b03199283168117909155600a805490921617905560408051808201909152601a81527f45746865726e617574205661756c74204368616c6c656e67652100000000000060208201526102c690610916565b50565b600a54604051630667f9d760e41b81526001600160a01b03909116600482015260016024820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d70906044016020604051808303816000875af1158015610331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035591906109bf565b90507fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99816040516103b191906040808252600e908201526d1cdd1bdb195b94185cdcdddbdc9960921b6060820152602081019190915260800190565b60405180910390a160095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561041257600080fd5b505af1158015610426573d6000803e3d6000fd5b5050600a5460405163764dad9d60e11b8152600481018590526001600160a01b03909116925063ec9b5b3a9150602401600060405180830381600087803b15801561047057600080fd5b505af1158015610484573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff91906109d8565b1561050c5761050c6109fa565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561056557600080fd5b505af1158015610579573d6000803e3d6000fd5b5050600854600b546040516364416be160e11b81526001600160a01b039182166004820152600094509116915063c882d7c2906024016020604051808303816000875af11580156105ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f291906109d8565b905080610601576106016109fa565b5050565b60008054610100900460ff16156106255750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561072b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916106b3917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610a3c565b60408051601f19818403018152908290526106cd91610a6d565b6000604051808303816000865af19150503d806000811461070a576040519150601f19603f3d011682016040523d82523d6000602084013e61070f565b606091505b509150508080602001905181019061072791906109d8565b9150505b919050565b60405161073c90610982565b604051809103906000f080158015610758573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af11580156107ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f2919061098f565b600980546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b81526004810191909152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561086d57600080fd5b505af1158015610881573d6000803e3d6000fd5b5050600954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201526720ba3a30b1b5b2b960c11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156108fc57600080fd5b505af1158015610910573d6000803e3d6000fd5b50505050565b6102c68160405160240161092a9190610a89565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6104bc80610abd83390190565b61069880610f7983390190565b6000602082840312156109a157600080fd5b81516001600160a01b03811681146109b857600080fd5b9392505050565b6000602082840312156109d157600080fd5b5051919050565b6000602082840312156109ea57600080fd5b815180151581146109b857600080fd5b634e487b7160e01b600052600160045260246000fd5b60005b83811015610a2b578181015183820152602001610a13565b838111156109105750506000910152565b6001600160e01b0319831681528151600090610a5f816004850160208701610a10565b919091016004019392505050565b60008251610a7f818460208701610a10565b9190910192915050565b6020815260008251806020840152610aa8816040850160208701610a10565b601f01601f1916919091016040019291505056fe608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35061045b806100616000396000f3fe60806040526004361061003f5760003560e01c806313af4035146100445780637726f776146100665780638da5cb5b14610096578063d38def5b146100b6575b600080fd5b34801561005057600080fd5b5061006461005f36600461026e565b6100e6565b005b61007961007436600461026e565b61017e565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b50600054610079906001600160a01b031681565b3480156100c257600080fd5b506100d66100d1366004610292565b6101d8565b604051901515815260200161008d565b6000546001600160a01b031633146101335760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000807fb725c171b0105ddbcd168d5f792973d0d369fa55a766a22ffc0863f53c51ef376040516101ae90610249565b908152602001604051809103906000f0801580156101d0573d6000803e3d6000fd5b509392505050565b600080839050806001600160a01b031663cf3090126040518163ffffffff1660e01b8152600401602060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024091906102cb565b15949350505050565b610138806102ee83390190565b6001600160a01b038116811461026b57600080fd5b50565b60006020828403121561028057600080fd5b813561028b81610256565b9392505050565b600080604083850312156102a557600080fd5b82356102b081610256565b915060208301356102c081610256565b809150509250929050565b6000602082840312156102dd57600080fd5b8151801515811461028b57600080fdfe608060405234801561001057600080fd5b5060405161013838038061013883398101604081905261002f91610045565b6000805460ff191660019081179091555561005e565b60006020828403121561005757600080fd5b5051919050565b60cc8061006c6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b60666062366004607e565b6068565b005b8060015403607b576000805460ff191690555b50565b600060208284031215608f57600080fd5b503591905056fea264697066735822122005ac26154beaab4dfdb69cd9bf988436fa26b7eacdc12496e941d064d16105e764736f6c634300080f0033a264697066735822122026db14727bcb39016b5256a168684f2cf0fdcb3e7f0da2bf54b95cd194cf1eba64736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610637806100616000396000f3fe6080604052600436106100555760003560e01c806313af40351461005a578063202023d41461007c5780638da5cb5b1461009c578063c882d7c2146100d9578063cf00469514610109578063dfc86b1714610139575b600080fd5b34801561006657600080fd5b5061007a61007536600461059e565b61014c565b005b34801561008857600080fd5b5061007a61009736600461059e565b6101e5565b3480156100a857600080fd5b506000546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b506100f96100f436600461059e565b610255565b60405190151581526020016100d0565b34801561011557600080fd5b506100f961012436600461059e565b60016020526000908152604090205460ff1681565b6100bc61014736600461059e565b610404565b6000546001600160a01b0316331461019a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b0316331461022e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610191565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6001600160a01b0380821660009081526002602052604081208054919290911633146102c35760405162461bcd60e51b815260206004820152601960248201527f57726f6e6720696e7374616e636520666f7220706c61796572000000000000006044820152606401610191565b6001810154600160a01b900460ff161561031f5760405162461bcd60e51b815260206004820152601760248201527f4c6576656c20636f6d706c6574656420616c72656164790000000000000000006044820152606401610191565b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039791906105c2565b156103fb57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166104635760405162461bcd60e51b815260206004820152601460248201527313195d995b081b9bdd081c9959da5cdd195c995960621b6044820152606401610191565b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104d291906105e4565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6001600160a01b038116811461059b57600080fd5b50565b6000602082840312156105b057600080fd5b81356105bb81610586565b9392505050565b6000602082840312156105d457600080fd5b815180151581146105bb57600080fd5b6000602082840312156105f657600080fd5b81516105bb8161058656fea2646970667358221220523e5a4417d83cc55f7d967e04356b019d089872cf237a5e2ec7ccb9e536f7e564736f6c634300080f0033a2646970667358221220be37e3f6b01dcad604deb09e91d171db1cd8b9c749235ec790500612b557e87864736f6c634300080f0033",
    "sourceMap": "547:1092:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:392;;;:::i;:::-;;328:38:0;;255:64;328:38;;;;;-1:-1:-1;;;;;190:32:20;;;172:51;;160:2;145:18;328:38:0;;;;;;;;1087:549:19;;;:::i;1865:600:5:-;;;:::i;:::-;;;399:14:20;;392:22;374:41;;362:2;347:18;1865:600:5;234:187:20;173:28:0;;;;;;;;;;;;1609:26:5;;;;;;;;;687:392:19;739:17;:15;:17::i;:::-;769:25;797:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;826:9:19;;:37;;-1:-1:-1;;;826:37:19;;-1:-1:-1;;;;;190:32:20;;;826:37:19;;;172:51:20;769:46:19;;-1:-1:-1;826:9:19;;;:23;;145:18:20;;826:37:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;885:8:19;;876:18;;-1:-1:-1;;;876:18:19;;-1:-1:-1;;;;;885:8:19;;;876:18;;;172:51:20;255:64:0;;-1:-1:-1;876:8:19;;-1:-1:-1;145:18:20;;876::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;928:9:19;;:43;;-1:-1:-1;;;928:43:19;;-1:-1:-1;;;;;190:32:20;;;928:43:19;;;172:51:20;928:9:19;;;;-1:-1:-1;928:29:19;;-1:-1:-1;145:18:20;;928:43:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;905:12;:67;;-1:-1:-1;;;;;905:67:19;;;;-1:-1:-1;;;;;;905:67:19;;;;;;;;983:14;:36;;;;;;;;1030:41;;;;;;;;;;;;;;;;;;;:11;:41::i;:::-;728:351;687:392::o;1087:549::-;1242:14;;1226:50;;-1:-1:-1;;;1226:50:19;;-1:-1:-1;;;;;1242:14:19;;;1226:50;;;1341:51:20;1242:14:19;1408:18:20;;;1401:34;1201:22:19;;255:64:0;;1226:7:19;;1314:18:20;;1226:50:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1201:75;;1294:51;1330:14;1294:51;;;;;1865:2:20;1847:21;;;1904:2;1884:18;;;1877:30;-1:-1:-1;;;1938:2:20;1923:18;;1916:44;2027:4;2012:20;;2005:36;;;;1992:3;1977:19;;1635:412;1294:51:19;;;;;;;;1367:8;;1358:18;;-1:-1:-1;;;1358:18:19;;-1:-1:-1;;;;;1367:8:19;;;1358:18;;;172:51:20;255:64:0;;1358:8:19;;145:18:20;;1358::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1387:14:19;;:37;;-1:-1:-1;;;1387:37:19;;;;;2198:25:20;;;-1:-1:-1;;;;;1387:14:19;;;;-1:-1:-1;1387:21:19;;-1:-1:-1;2171:18:20;;1387:37:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:14;;;;;;;;;-1:-1:-1;;;;;1445:14:19;-1:-1:-1;;;;;1445:21:19;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1444:24;1437:32;;;;:::i;:::-;1516:8;;1507:18;;-1:-1:-1;;;1507:18:19;;-1:-1:-1;;;;;1516:8:19;;;1507:18;;;172:51:20;255:64:0;;1507:8:19;;145:18:20;;1507::19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1555:9:19;;1585:12;;1555:43;;-1:-1:-1;;;1555:43:19;;-1:-1:-1;;;;;1585:12:19;;;1555:43;;;172:51:20;1536:16:19;;-1:-1:-1;1555:9:19;;;-1:-1:-1;1555:29:19;;145:18:20;;1555:43:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1536:62;;1616:11;1609:19;;;;:::i;:::-;1116:520;;1087:549::o;1865:600:5:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:5;;;;;;;;1865:600::o;1916:542::-;1991:17;3070:42;3058:55;3141:16;2031:382;;2251:43;;;1712:64;2251:43;;;1341:51:20;;;-1:-1:-1;;;1408:18:20;;;1401:34;2251:43:5;;;;;;;;;1314:18:20;;;2251:43:5;;;-1:-1:-1;;1712:64:5;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:5;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:5:o;256:284:19:-;353:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;341:9:19;:27;;-1:-1:-1;;;;;;341:27:19;-1:-1:-1;;;;;341:27:19;;;;;;;;;;436:10;;-1:-1:-1;;;;;;436:10:19;;-1:-1:-1;436:10:19;;;2198:25:20;255:64:0;;436:7:19;;2171:18:20;;436:10:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;417:8;:30;;-1:-1:-1;;;;;;417:30:19;-1:-1:-1;;;;;417:30:19;;;;;;;;;464:27;;-1:-1:-1;;;464:27:19;;;;;1341:51:20;;;;482:8:19;1408:18:20;;;1401:34;255:64:0;;464:7:19;;1314:18:20;;464:27:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;511:8:19;;502:30;;;-1:-1:-1;;;502:30:19;;-1:-1:-1;;;;;511:8:19;;;502:30;;;4514:51:20;4581:18;;;4574:30;4640:1;4620:18;;;4613:29;-1:-1:-1;;;4658:18:20;;;4651:38;255:64:0;;-1:-1:-1;502:8:19;;-1:-1:-1;4706:19:20;;502:30:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:284::o;5806:123:3:-;5862:59;5917:2;5878:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5878:42:3;;;;;;;;;;;;;;-1:-1:-1;;;;;5878:42:3;-1:-1:-1;;;5878:42:3;;;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;872:290:20:-;942:6;995:2;983:9;974:7;970:23;966:32;963:52;;;1011:1;1008;1001:12;963:52;1037:16;;-1:-1:-1;;;;;1082:31:20;;1072:42;;1062:70;;1128:1;1125;1118:12;1062:70;1151:5;872:290;-1:-1:-1;;;872:290:20:o;1446:184::-;1516:6;1569:2;1557:9;1548:7;1544:23;1540:32;1537:52;;;1585:1;1582;1575:12;1537:52;-1:-1:-1;1608:16:20;;1446:184;-1:-1:-1;1446:184:20:o;2234:277::-;2301:6;2354:2;2342:9;2333:7;2329:23;2325:32;2322:52;;;2370:1;2367;2360:12;2322:52;2402:9;2396:16;2455:5;2448:13;2441:21;2434:5;2431:32;2421:60;;2477:1;2474;2467:12;2516:127;2577:10;2572:3;2568:20;2565:1;2558:31;2608:4;2605:1;2598:15;2632:4;2629:1;2622:15;2872:258;2944:1;2954:113;2968:6;2965:1;2962:13;2954:113;;;3044:11;;;3038:18;3025:11;;;3018:39;2990:2;2983:10;2954:113;;;3085:6;3082:1;3079:13;3076:48;;;-1:-1:-1;;3120:1:20;3102:16;;3095:27;2872:258::o;3135:371::-;-1:-1:-1;;;;;;3320:33:20;;3308:46;;3377:13;;3290:3;;3399:61;3377:13;3449:1;3440:11;;3433:4;3421:17;;3399:61;:::i;:::-;3480:16;;;;3498:1;3476:24;;3135:371;-1:-1:-1;;;3135:371:20:o;3511:274::-;3640:3;3678:6;3672:13;3694:53;3740:6;3735:3;3728:4;3720:6;3716:17;3694:53;:::i;:::-;3763:16;;;;;3511:274;-1:-1:-1;;3511:274:20:o;4736:383::-;4885:2;4874:9;4867:21;4848:4;4917:6;4911:13;4960:6;4955:2;4944:9;4940:18;4933:34;4976:66;5035:6;5030:2;5019:9;5015:18;5010:2;5002:6;4998:15;4976:66;:::i;:::-;5103:2;5082:15;-1:-1:-1;;5078:29:20;5063:45;;;;5110:2;5059:54;;4736:383;-1:-1:-1;;4736:383:20:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAttack()": "6f2db99c",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test\\08-Vault.t.sol",
    "id": 22077,
    "exportedSymbols": {
      "Attack": [
        22076
      ],
      "BaseSetUp": [
        21950
      ],
      "DSTest": [
        4558
      ],
      "Ethernaut": [
        39360
      ],
      "Level": [
        39127
      ],
      "Owned": [
        4618
      ],
      "Script": [
        22312
      ],
      "StdStorage": [
        1530
      ],
      "Test": [
        1432
      ],
      "Vault": [
        39105
      ],
      "VaultFactory": [
        39190
      ],
      "Vm": [
        22941
      ],
      "console": [
        31005
      ],
      "console2": [
        39069
      ],
      "stdError": [
        1502
      ],
      "stdMath": [
        2771
      ],
      "stdStorage": [
        2632
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1606:19",
    "nodes": [
      {
        "id": 21904,
        "nodeType": "PragmaDirective",
        "src": "33:24:19",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21905,
        "nodeType": "ImportDirective",
        "src": "61:28:19",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22077,
        "sourceUnit": 2772,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21906,
        "nodeType": "ImportDirective",
        "src": "91:27:19",
        "absolutePath": "src/Ethernaut.sol",
        "file": "src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22077,
        "sourceUnit": 39361,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21907,
        "nodeType": "ImportDirective",
        "src": "120:39:19",
        "absolutePath": "src/08-Vault/VaultFactory.sol",
        "file": "src/08-Vault/VaultFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22077,
        "sourceUnit": 39191,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21950,
        "nodeType": "ContractDefinition",
        "src": "163:380:19",
        "nodes": [
          {
            "id": 21912,
            "nodeType": "VariableDeclaration",
            "src": "197:19:19",
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "207:9:19",
            "scope": 21950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$39360",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 21911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21910,
                "name": "Ethernaut",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39360,
                "src": "197:9:19"
              },
              "referencedDeclaration": 39360,
              "src": "197:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$39360",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21914,
            "nodeType": "VariableDeclaration",
            "src": "223:24:19",
            "constant": false,
            "mutability": "mutable",
            "name": "attacker",
            "nameLocation": "239:8:19",
            "scope": 21950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 21913,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "223:15:19",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21949,
            "nodeType": "FunctionDefinition",
            "src": "256:284:19",
            "body": {
              "id": 21948,
              "nodeType": "Block",
              "src": "288:252:19",
              "statements": [
                {
                  "expression": {
                    "id": 21922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21917,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21912,
                      "src": "341:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$39360",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "353:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$39360_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 21919,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21918,
                            "name": "Ethernaut",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39360,
                            "src": "357:9:19"
                          },
                          "referencedDeclaration": 39360,
                          "src": "357:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$39360",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 21921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "353:15:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$39360",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "341:27:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$39360",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 21923,
                  "nodeType": "ExpressionStatement",
                  "src": "341:27:19"
                },
                {
                  "expression": {
                    "id": 21932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21924,
                      "name": "attacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21914,
                      "src": "417:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 21929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "444:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 21927,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22107,
                              "src": "436:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$22941",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 21928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22379,
                            "src": "436:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 21930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "436:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "428:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 21925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:8:19",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 21931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "428:19:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "417:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 21933,
                  "nodeType": "ExpressionStatement",
                  "src": "417:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21937,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21914,
                        "src": "472:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 21938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "482:8:19",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21934,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22107,
                        "src": "464:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22941",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22561,
                      "src": "464:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:27:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21940,
                  "nodeType": "ExpressionStatement",
                  "src": "464:27:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21944,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21914,
                        "src": "511:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "41747461636b6572",
                        "id": 21945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "521:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f1c3039bf95e60ffa2cf137c485683e4ff8d3d148591d73a24b2bda95a73652",
                          "typeString": "literal_string \"Attacker\""
                        },
                        "value": "Attacker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f1c3039bf95e60ffa2cf137c485683e4ff8d3d148591d73a24b2bda95a73652",
                          "typeString": "literal_string \"Attacker\""
                        }
                      ],
                      "expression": {
                        "id": 21941,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22107,
                        "src": "502:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22941",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22672,
                      "src": "502:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 21946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "502:30:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21947,
                  "nodeType": "ExpressionStatement",
                  "src": "502:30:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "265:5:19",
            "parameters": {
              "id": 21915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:2:19"
            },
            "returnParameters": {
              "id": 21916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:19"
            },
            "scope": 21950,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21908,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1432,
              "src": "185:4:19"
            },
            "id": 21909,
            "nodeType": "InheritanceSpecifier",
            "src": "185:4:19"
          }
        ],
        "canonicalName": "BaseSetUp",
        "contractDependencies": [
          39360
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21950,
          1432,
          22312,
          4558
        ],
        "name": "BaseSetUp",
        "nameLocation": "172:9:19",
        "scope": 22077,
        "usedErrors": []
      },
      {
        "id": 22076,
        "nodeType": "ContractDefinition",
        "src": "547:1092:19",
        "nodes": [
          {
            "id": 21956,
            "nodeType": "UsingForDirective",
            "src": "583:32:19",
            "global": false,
            "libraryName": {
              "id": 21953,
              "name": "stdStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2632,
              "src": "589:10:19"
            },
            "typeName": {
              "id": 21955,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21954,
                "name": "StdStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1530,
                "src": "604:10:19"
              },
              "referencedDeclaration": 1530,
              "src": "604:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$1530_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 21959,
            "nodeType": "VariableDeclaration",
            "src": "623:20:19",
            "constant": false,
            "mutability": "mutable",
            "name": "ethernautVault",
            "nameLocation": "629:14:19",
            "scope": 22076,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vault_$39105",
              "typeString": "contract Vault"
            },
            "typeName": {
              "id": 21958,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21957,
                "name": "Vault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39105,
                "src": "623:5:19"
              },
              "referencedDeclaration": 39105,
              "src": "623:5:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vault_$39105",
                "typeString": "contract Vault"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21961,
            "nodeType": "VariableDeclaration",
            "src": "650:28:19",
            "constant": false,
            "mutability": "mutable",
            "name": "levelAddress",
            "nameLocation": "666:12:19",
            "scope": 22076,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 21960,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "650:15:19",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22013,
            "nodeType": "FunctionDefinition",
            "src": "687:392:19",
            "body": {
              "id": 22012,
              "nodeType": "Block",
              "src": "728:351:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21965,
                        "name": "BaseSetUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21950,
                        "src": "739:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseSetUp_$21950_$",
                          "typeString": "type(contract BaseSetUp)"
                        }
                      },
                      "id": 21967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21949,
                      "src": "739:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21969,
                  "nodeType": "ExpressionStatement",
                  "src": "739:17:19"
                },
                {
                  "assignments": [
                    21972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21972,
                      "mutability": "mutable",
                      "name": "vaultFactory",
                      "nameLocation": "782:12:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 22012,
                      "src": "769:25:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VaultFactory_$39190",
                        "typeString": "contract VaultFactory"
                      },
                      "typeName": {
                        "id": 21971,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 21970,
                          "name": "VaultFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39190,
                          "src": "769:12:19"
                        },
                        "referencedDeclaration": 39190,
                        "src": "769:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VaultFactory_$39190",
                          "typeString": "contract VaultFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21977,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "797:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_VaultFactory_$39190_$",
                        "typeString": "function () returns (contract VaultFactory)"
                      },
                      "typeName": {
                        "id": 21974,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 21973,
                          "name": "VaultFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39190,
                          "src": "801:12:19"
                        },
                        "referencedDeclaration": 39190,
                        "src": "801:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VaultFactory_$39190",
                          "typeString": "contract VaultFactory"
                        }
                      }
                    },
                    "id": 21976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VaultFactory_$39190",
                      "typeString": "contract VaultFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "769:46:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21981,
                        "name": "vaultFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21972,
                        "src": "850:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VaultFactory_$39190",
                          "typeString": "contract VaultFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_VaultFactory_$39190",
                          "typeString": "contract VaultFactory"
                        }
                      ],
                      "expression": {
                        "id": 21978,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21912,
                        "src": "826:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$39360",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 21980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39252,
                      "src": "826:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$39127_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 21982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21983,
                  "nodeType": "ExpressionStatement",
                  "src": "826:37:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21987,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21914,
                        "src": "885:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 21984,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22107,
                        "src": "876:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22941",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22532,
                      "src": "876:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21989,
                  "nodeType": "ExpressionStatement",
                  "src": "876:18:19"
                },
                {
                  "expression": {
                    "id": 21998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21990,
                      "name": "levelAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21961,
                      "src": "905:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 21995,
                              "name": "vaultFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21972,
                              "src": "958:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultFactory_$39190",
                                "typeString": "contract VaultFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VaultFactory_$39190",
                                "typeString": "contract VaultFactory"
                              }
                            ],
                            "expression": {
                              "id": 21993,
                              "name": "ethernaut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21912,
                              "src": "928:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ethernaut_$39360",
                                "typeString": "contract Ethernaut"
                              }
                            },
                            "id": 21994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createLevelInstance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39301,
                            "src": "928:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$39127_$returns$_t_address_$",
                              "typeString": "function (contract Level) payable external returns (address)"
                            }
                          },
                          "id": 21996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "928:43:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "920:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 21991,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "920:8:19",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 21997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "920:52:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "905:67:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 21999,
                  "nodeType": "ExpressionStatement",
                  "src": "905:67:19"
                },
                {
                  "expression": {
                    "id": 22004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22000,
                      "name": "ethernautVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21959,
                      "src": "983:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$39105",
                        "typeString": "contract Vault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 22002,
                          "name": "levelAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21961,
                          "src": "1006:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 22001,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39105,
                        "src": "1000:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Vault_$39105_$",
                          "typeString": "type(contract Vault)"
                        }
                      },
                      "id": 22003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1000:19:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$39105",
                        "typeString": "contract Vault"
                      }
                    },
                    "src": "983:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$39105",
                      "typeString": "contract Vault"
                    }
                  },
                  "id": 22005,
                  "nodeType": "ExpressionStatement",
                  "src": "983:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "45746865726e617574205661756c74204368616c6c656e676521",
                        "id": 22009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1042:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5da6ca4ce42fad1f9a50dcc8c052126f1c8729ea5a75080471e5ac96d80aac97",
                          "typeString": "literal_string \"Ethernaut Vault Challenge!\""
                        },
                        "value": "Ethernaut Vault Challenge!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5da6ca4ce42fad1f9a50dcc8c052126f1c8729ea5a75080471e5ac96d80aac97",
                          "typeString": "literal_string \"Ethernaut Vault Challenge!\""
                        }
                      ],
                      "expression": {
                        "id": 22006,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31005,
                        "src": "1030:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$31005_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 22008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23536,
                      "src": "1030:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 22010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1030:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22011,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:41:19"
                }
              ]
            },
            "baseFunctions": [
              21949
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "696:5:19",
            "overrides": {
              "id": 21963,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "719:8:19"
            },
            "parameters": {
              "id": 21962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:2:19"
            },
            "returnParameters": {
              "id": 21964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:0:19"
            },
            "scope": 22076,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 22075,
            "nodeType": "FunctionDefinition",
            "src": "1087:549:19",
            "body": {
              "id": 22074,
              "nodeType": "Block",
              "src": "1116:520:19",
              "statements": [
                {
                  "assignments": [
                    22017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22017,
                      "mutability": "mutable",
                      "name": "stolenPassword",
                      "nameLocation": "1209:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 22074,
                      "src": "1201:22:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 22016,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1201:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22032,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22022,
                            "name": "ethernautVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21959,
                            "src": "1242:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$39105",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$39105",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 22021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1234:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22020,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1234:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1234:23:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 22028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1272:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 22027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1267:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 22026,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1267:4:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 22029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1267:7:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 22025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1259:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 22024,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1259:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1259:16:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 22018,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22107,
                        "src": "1226:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22941",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "load",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22350,
                      "src": "1226:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes32) external returns (bytes32)"
                      }
                    },
                    "id": 22031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:50:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1201:75:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "73746f6c656e50617373776f7264",
                        "id": 22034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1312:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbaf3c0be3e45dd94267548017846c7dfb44990370d59f3192f6dfc4f6f37b17",
                          "typeString": "literal_string \"stolenPassword\""
                        },
                        "value": "stolenPassword"
                      },
                      {
                        "id": 22035,
                        "name": "stolenPassword",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22017,
                        "src": "1330:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bbaf3c0be3e45dd94267548017846c7dfb44990370d59f3192f6dfc4f6f37b17",
                          "typeString": "literal_string \"stolenPassword\""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 22033,
                      "name": "log_named_bytes32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2817,
                      "src": "1294:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 22036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:51:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22037,
                  "nodeType": "EmitStatement",
                  "src": "1289:56:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22041,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21914,
                        "src": "1367:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22038,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22107,
                        "src": "1358:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22941",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22532,
                      "src": "1358:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 22042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22043,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:18:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22047,
                        "name": "stolenPassword",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22017,
                        "src": "1409:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 22044,
                        "name": "ethernautVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21959,
                        "src": "1387:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$39105",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 22046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39104,
                      "src": "1387:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 22048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1387:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22049,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:37:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1444:24:19",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 22051,
                              "name": "ethernautVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21959,
                              "src": "1445:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$39105",
                                "typeString": "contract Vault"
                              }
                            },
                            "id": 22052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39073,
                            "src": "1445:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 22053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1445:23:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 22050,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1437:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 22055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:32:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22056,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:32:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22060,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21914,
                        "src": "1516:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22057,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22107,
                        "src": "1507:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22941",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22532,
                      "src": "1507:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 22061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22062,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:18:19"
                },
                {
                  "assignments": [
                    22064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22064,
                      "mutability": "mutable",
                      "name": "passedLevel",
                      "nameLocation": "1541:11:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 22074,
                      "src": "1536:16:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 22063,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1536:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22069,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 22067,
                        "name": "levelAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21961,
                        "src": "1585:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22065,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21912,
                        "src": "1555:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$39360",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 22066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39359,
                      "src": "1555:29:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 22068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1555:43:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1536:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22071,
                        "name": "passedLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22064,
                        "src": "1616:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 22070,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1609:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 22072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22073,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:19:19"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "1096:10:19",
            "parameters": {
              "id": 22014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1106:2:19"
            },
            "returnParameters": {
              "id": 22015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:19"
            },
            "scope": 22076,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21951,
              "name": "BaseSetUp",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21950,
              "src": "566:9:19"
            },
            "id": 21952,
            "nodeType": "InheritanceSpecifier",
            "src": "566:9:19"
          }
        ],
        "canonicalName": "Attack",
        "contractDependencies": [
          39190,
          39360
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          22076,
          21950,
          1432,
          22312,
          4558
        ],
        "name": "Attack",
        "nameLocation": "556:6:19",
        "scope": 22077,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 19
}