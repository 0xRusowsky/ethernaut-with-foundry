{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50611a0d806100316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a768463146100715780636f2db99c146100a9578063ba414fa6146100b1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f6102c9565b6100b96106a7565b60405190151581526020016100a0565b6000546100b99062010000900460ff1681565b6000546100b99060ff1681565b6100f16107d2565b60006040516100ff90610a17565b604051809103906000f08015801561011b573d6000803e3d6000fd5b5060085460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561016557600080fd5b505af1158015610179573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156101d657600080fd5b505af11580156101ea573d6000803e3d6000fd5b505060085460405163dfc86b1760e01b81526001600160a01b038581166004830152909116925063dfc86b1791506024016020604051808303816000875af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610a3e565b600c80546001600160a01b03929092166001600160a01b03199283168117909155600a805490921617905560408051808201909152601d81527f45746865726e61757420436f696e466c6970204368616c6c656e67652100000060208201526102c6906109b8565b50565b6009546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801561032257600080fd5b505af1158015610336573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190610a6e565b156103be576103be610a87565b600a546040516001600160a01b03909116906103d990610a24565b6001600160a01b039091168152602001604051809103906000f080158015610405573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905560015b600a811161053357737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30610457836104d2610ab3565b6040518263ffffffff1660e01b815260040161047591815260200190565b600060405180830381600087803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b50505050600b60009054906101000a90046001600160a01b03166001600160a01b031663987a4e266040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190610ad2565b508061052b81610af4565b915050610429565b50600a60009054906101000a90046001600160a01b03166001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610a6e565b600a146105ba576105ba610a87565b600854600c546040516364416be160e11b81526001600160a01b039182166004820152600092919091169063c882d7c2906024016020604051808303816000875af115801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106319190610ad2565b90508061064057610640610a87565b604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b5050505050565b60008054610100900460ff16156106c75750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107cd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610755917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b39565b60408051601f198184030181529082905261076f91610b6a565b6000604051808303816000865af19150503d80600081146107ac576040519150601f19603f3d011682016040523d82523d6000602084013e6107b1565b606091505b50915050808060200190518101906107c99190610ad2565b9150505b919050565b6040516107de90610a31565b604051809103906000f0801580156107fa573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015610870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108949190610a3e565b600980546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b81526004810191909152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561090f57600080fd5b505af1158015610923573d6000803e3d6000fd5b5050600954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201526720ba3a30b1b5b2b960c11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b50505050565b6102c6816040516024016109cc9190610b86565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61056480610bba83390190565b6102228061111e83390190565b6106988061134083390190565b600060208284031215610a5057600080fd5b81516001600160a01b0381168114610a6757600080fd5b9392505050565b600060208284031215610a8057600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610acd57610acd610a9d565b500290565b600060208284031215610ae457600080fd5b81518015158114610a6757600080fd5b600060018201610b0657610b06610a9d565b5060010190565b60005b83811015610b28578181015183820152602001610b10565b838111156109b25750506000910152565b6001600160e01b0319831681528151600090610b5c816004850160208701610b0d565b919091016004019392505050565b60008251610b7c818460208701610b0d565b9190910192915050565b6020815260008251806020840152610ba5816040850160208701610b0d565b601f01601f1916919091016040019291505056fe608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610503806100616000396000f3fe60806040526004361061003f5760003560e01c806313af4035146100445780637726f776146100665780638da5cb5b14610096578063d38def5b146100b6575b600080fd5b34801561005057600080fd5b5061006461005f36600461024a565b6100e6565b005b61007961007436600461024a565b61017e565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b50600054610079906001600160a01b031681565b3480156100c257600080fd5b506100d66100d136600461026e565b6101b1565b604051901515815260200161008d565b6000546001600160a01b031633146101335760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008060405161018d90610225565b604051809103906000f0801580156101a9573d6000803e3d6000fd5b509392505050565b600080839050600a816001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021b91906102a7565b1015949350505050565b61020d806102c183390190565b6001600160a01b038116811461024757600080fd5b50565b60006020828403121561025c57600080fd5b813561026781610232565b9392505050565b6000806040838503121561028157600080fd5b823561028c81610232565b9150602083013561029c81610232565b809150509250929050565b6000602082840312156102b957600080fd5b505191905056fe6080604052600160ff1b60025534801561001857600080fd5b50600080556101e18061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610063575b600080fd5b61004e610049366004610121565b61007a565b60405190151581526020015b60405180910390f35b61006c60005481565b60405190815260200161005a565b600080610088436001610102565b4060001c9050806001540361009c57600080fd5b60018190556002546000906100b2908390610115565b90506000816001146100c55760006100c8565b60015b9050841515811515036100f4576000805490806100e483610159565b9091555060019695505050505050565b505060008080559392505050565b600061010e8284610172565b9392505050565b600061010e8284610189565b60006020828403121561013357600080fd5b8135801515811461010e57600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161016b5761016b610143565b5060010190565b60008282101561018457610184610143565b500390565b6000826101a657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212208c1c7111a61396ebd56de77a3e7d4b63077bd4d3cf3b1a2fd6774ecf55ea025964736f6c634300080f0033a26469706673582212201378272312bb80c35a726796e700b1e678d51e46bbb696a65455d204e8538c1d64736f6c634300080f0033608060405234801561001057600080fd5b5060405161022238038061022283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61018f806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063987a4e2614610030575b600080fd5b61003861004c565b604051901515815260200160405180910390f35b60008061005a6001436100e9565b600054904091506001600160a01b0316631d263f6761007d600160ff1b8461010e565b6001146040518263ffffffff1660e01b81526004016100a0911515815260200190565b6020604051808303816000875af11580156100bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e39190610130565b91505090565b60008282101561010957634e487b7160e01b600052601160045260246000fd5b500390565b60008261012b57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561014257600080fd5b8151801515811461015257600080fd5b939250505056fea2646970667358221220db77aed12524cb9fdf5425fe3277de70d3113ad7431d3638e9a33f0871a9d7ff64736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610637806100616000396000f3fe6080604052600436106100555760003560e01c806313af40351461005a578063202023d41461007c5780638da5cb5b1461009c578063c882d7c2146100d9578063cf00469514610109578063dfc86b1714610139575b600080fd5b34801561006657600080fd5b5061007a61007536600461059e565b61014c565b005b34801561008857600080fd5b5061007a61009736600461059e565b6101e5565b3480156100a857600080fd5b506000546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b506100f96100f436600461059e565b610255565b60405190151581526020016100d0565b34801561011557600080fd5b506100f961012436600461059e565b60016020526000908152604090205460ff1681565b6100bc61014736600461059e565b610404565b6000546001600160a01b0316331461019a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b0316331461022e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610191565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6001600160a01b0380821660009081526002602052604081208054919290911633146102c35760405162461bcd60e51b815260206004820152601960248201527f57726f6e6720696e7374616e636520666f7220706c61796572000000000000006044820152606401610191565b6001810154600160a01b900460ff161561031f5760405162461bcd60e51b815260206004820152601760248201527f4c6576656c20636f6d706c6574656420616c72656164790000000000000000006044820152606401610191565b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039791906105c2565b156103fb57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166104635760405162461bcd60e51b815260206004820152601460248201527313195d995b081b9bdd081c9959da5cdd195c995960621b6044820152606401610191565b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104d291906105e4565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6001600160a01b038116811461059b57600080fd5b50565b6000602082840312156105b057600080fd5b81356105bb81610586565b9392505050565b6000602082840312156105d457600080fd5b815180151581146105bb57600080fd5b6000602082840312156105f657600080fd5b81516105bb8161058656fea2646970667358221220523e5a4417d83cc55f7d967e04356b019d089872cf237a5e2ec7ccb9e536f7e564736f6c634300080f0033a264697066735822122031ea7a2e343096f73f93bd5b9410a4e145c24c01ce6a18adb84be82fe6a79b3664736f6c634300080f0033",
    "sourceMap": "593:1249:43:-:0;;;1609:26:6;;;-1:-1:-1;;173:28:0;;;;;593:1249:43;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a768463146100715780636f2db99c146100a9578063ba414fa6146100b1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f6102c9565b6100b96106a7565b60405190151581526020016100a0565b6000546100b99062010000900460ff1681565b6000546100b99060ff1681565b6100f16107d2565b60006040516100ff90610a17565b604051809103906000f08015801561011b573d6000803e3d6000fd5b5060085460405163080808f560e21b81526001600160a01b03808416600483015292935091169063202023d490602401600060405180830381600087803b15801561016557600080fd5b505af1158015610179573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156101d657600080fd5b505af11580156101ea573d6000803e3d6000fd5b505060085460405163dfc86b1760e01b81526001600160a01b038581166004830152909116925063dfc86b1791506024016020604051808303816000875af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610a3e565b600c80546001600160a01b03929092166001600160a01b03199283168117909155600a805490921617905560408051808201909152601d81527f45746865726e61757420436f696e466c6970204368616c6c656e67652100000060208201526102c6906109b8565b50565b6009546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801561032257600080fd5b505af1158015610336573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190610a6e565b156103be576103be610a87565b600a546040516001600160a01b03909116906103d990610a24565b6001600160a01b039091168152602001604051809103906000f080158015610405573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905560015b600a811161053357737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30610457836104d2610ab3565b6040518263ffffffff1660e01b815260040161047591815260200190565b600060405180830381600087803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b50505050600b60009054906101000a90046001600160a01b03166001600160a01b031663987a4e266040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190610ad2565b508061052b81610af4565b915050610429565b50600a60009054906101000a90046001600160a01b03166001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610a6e565b600a146105ba576105ba610a87565b600854600c546040516364416be160e11b81526001600160a01b039182166004820152600092919091169063c882d7c2906024016020604051808303816000875af115801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106319190610ad2565b90508061064057610640610a87565b604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b5050505050565b60008054610100900460ff16156106c75750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107cd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610755917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b39565b60408051601f198184030181529082905261076f91610b6a565b6000604051808303816000865af19150503d80600081146107ac576040519150601f19603f3d011682016040523d82523d6000602084013e6107b1565b606091505b50915050808060200190518101906107c99190610ad2565b9150505b919050565b6040516107de90610a31565b604051809103906000f0801580156107fa573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015610870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108949190610a3e565b600980546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b81526004810191909152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561090f57600080fd5b505af1158015610923573d6000803e3d6000fd5b5050600954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201526720ba3a30b1b5b2b960c11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b50505050565b6102c6816040516024016109cc9190610b86565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61056480610bba83390190565b6102228061111e83390190565b6106988061134083390190565b600060208284031215610a5057600080fd5b81516001600160a01b0381168114610a6757600080fd5b9392505050565b600060208284031215610a8057600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610acd57610acd610a9d565b500290565b600060208284031215610ae457600080fd5b81518015158114610a6757600080fd5b600060018201610b0657610b06610a9d565b5060010190565b60005b83811015610b28578181015183820152602001610b10565b838111156109b25750506000910152565b6001600160e01b0319831681528151600090610b5c816004850160208701610b0d565b919091016004019392505050565b60008251610b7c818460208701610b0d565b9190910192915050565b6020815260008251806020840152610ba5816040850160208701610b0d565b601f01601f1916919091016040019291505056fe608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610503806100616000396000f3fe60806040526004361061003f5760003560e01c806313af4035146100445780637726f776146100665780638da5cb5b14610096578063d38def5b146100b6575b600080fd5b34801561005057600080fd5b5061006461005f36600461024a565b6100e6565b005b61007961007436600461024a565b61017e565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b50600054610079906001600160a01b031681565b3480156100c257600080fd5b506100d66100d136600461026e565b6101b1565b604051901515815260200161008d565b6000546001600160a01b031633146101335760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60008060405161018d90610225565b604051809103906000f0801580156101a9573d6000803e3d6000fd5b509392505050565b600080839050600a816001600160a01b031663e6f334d76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021b91906102a7565b1015949350505050565b61020d806102c183390190565b6001600160a01b038116811461024757600080fd5b50565b60006020828403121561025c57600080fd5b813561026781610232565b9392505050565b6000806040838503121561028157600080fd5b823561028c81610232565b9150602083013561029c81610232565b809150509250929050565b6000602082840312156102b957600080fd5b505191905056fe6080604052600160ff1b60025534801561001857600080fd5b50600080556101e18061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610063575b600080fd5b61004e610049366004610121565b61007a565b60405190151581526020015b60405180910390f35b61006c60005481565b60405190815260200161005a565b600080610088436001610102565b4060001c9050806001540361009c57600080fd5b60018190556002546000906100b2908390610115565b90506000816001146100c55760006100c8565b60015b9050841515811515036100f4576000805490806100e483610159565b9091555060019695505050505050565b505060008080559392505050565b600061010e8284610172565b9392505050565b600061010e8284610189565b60006020828403121561013357600080fd5b8135801515811461010e57600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161016b5761016b610143565b5060010190565b60008282101561018457610184610143565b500390565b6000826101a657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212208c1c7111a61396ebd56de77a3e7d4b63077bd4d3cf3b1a2fd6774ecf55ea025964736f6c634300080f0033a26469706673582212201378272312bb80c35a726796e700b1e678d51e46bbb696a65455d204e8538c1d64736f6c634300080f0033608060405234801561001057600080fd5b5060405161022238038061022283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61018f806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063987a4e2614610030575b600080fd5b61003861004c565b604051901515815260200160405180910390f35b60008061005a6001436100e9565b600054904091506001600160a01b0316631d263f6761007d600160ff1b8461010e565b6001146040518263ffffffff1660e01b81526004016100a0911515815260200190565b6020604051808303816000875af11580156100bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e39190610130565b91505090565b60008282101561010957634e487b7160e01b600052601160045260246000fd5b500390565b60008261012b57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561014257600080fd5b8151801515811461015257600080fd5b939250505056fea2646970667358221220db77aed12524cb9fdf5425fe3277de70d3113ad7431d3638e9a33f0871a9d7ff64736f6c634300080f0033608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350610637806100616000396000f3fe6080604052600436106100555760003560e01c806313af40351461005a578063202023d41461007c5780638da5cb5b1461009c578063c882d7c2146100d9578063cf00469514610109578063dfc86b1714610139575b600080fd5b34801561006657600080fd5b5061007a61007536600461059e565b61014c565b005b34801561008857600080fd5b5061007a61009736600461059e565b6101e5565b3480156100a857600080fd5b506000546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b506100f96100f436600461059e565b610255565b60405190151581526020016100d0565b34801561011557600080fd5b506100f961012436600461059e565b60016020526000908152604090205460ff1681565b6100bc61014736600461059e565b610404565b6000546001600160a01b0316331461019a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b0316331461022e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610191565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6001600160a01b0380821660009081526002602052604081208054919290911633146102c35760405162461bcd60e51b815260206004820152601960248201527f57726f6e6720696e7374616e636520666f7220706c61796572000000000000006044820152606401610191565b6001810154600160a01b900460ff161561031f5760405162461bcd60e51b815260206004820152601760248201527f4c6576656c20636f6d706c6574656420616c72656164790000000000000000006044820152606401610191565b600181015460405163d38def5b60e01b81526001600160a01b0385811660048301523360248301529091169063d38def5b906044016020604051808303816000875af1158015610373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039791906105c2565b156103fb57600181018054600160a01b60ff60a01b198216179091556040516001600160a01b03909116815233907f9dfdf7e3e630f506a3dfe38cdbe34e196353364235df33e5a3b588488d9a1e789060200160405180910390a250600192915050565b50600092915050565b6001600160a01b03811660009081526001602052604081205460ff166104635760405162461bcd60e51b815260206004820152601460248201527313195d995b081b9bdd081c9959da5cdd195c995960621b6044820152606401610191565b604051633b937bbb60e11b81523360048201526000906001600160a01b03841690637726f77690349060240160206040518083038185885af11580156104ad573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104d291906105e4565b60408051606081018252338082526001600160a01b03878116602080850191825260008587018181528885168083526002845291889020965187549086166001600160a01b031990911617875592516001909601805493511515600160a01b026001600160a81b031990941696909416959095179190911790915592519182529293507f7bf7f1ed7f75e83b76de0ff139966989aff81cb85aac26469c18978d86aac1c2910160405180910390a292915050565b6001600160a01b038116811461059b57600080fd5b50565b6000602082840312156105b057600080fd5b81356105bb81610586565b9392505050565b6000602082840312156105d457600080fd5b815180151581146105bb57600080fd5b6000602082840312156105f657600080fd5b81516105bb8161058656fea2646970667358221220523e5a4417d83cc55f7d967e04356b019d089872cf237a5e2ec7ccb9e536f7e564736f6c634300080f0033a264697066735822122031ea7a2e343096f73f93bd5b9410a4e145c24c01ce6a18adb84be82fe6a79b3664736f6c634300080f0033",
    "sourceMap": "593:1249:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;733:445;;;:::i;:::-;;328:38:0;;255:64;328:38;;;;;-1:-1:-1;;;;;190:32:48;;;172:51;;160:2;145:18;328:38:0;;;;;;;;1186:653:43;;;:::i;1865:600:6:-;;;:::i;:::-;;;399:14:48;;392:22;374:41;;362:2;347:18;1865:600:6;234:187:48;173:28:0;;;;;;;;;;;;1609:26:6;;;;;;;;;733:445:43;785:17;:15;:17::i;:::-;844:31;878:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;910:9:43;;:40;;-1:-1:-1;;;910:40:43;;-1:-1:-1;;;;;190:32:48;;;910:40:43;;;172:51:48;844:55:43;;-1:-1:-1;910:9:43;;;:23;;145:18:48;;910:40:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;972:8:43;;963:18;;-1:-1:-1;;;963:18:43;;-1:-1:-1;;;;;972:8:43;;;963:18;;;172:51:48;255:64:0;;-1:-1:-1;963:8:43;;-1:-1:-1;145:18:48;;963::43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1015:9:43;;:46;;-1:-1:-1;;;1015:46:43;;-1:-1:-1;;;;;190:32:48;;;1015:46:43;;;172:51:48;1015:9:43;;;;-1:-1:-1;1015:29:43;;-1:-1:-1;145:18:48;;1015:46:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;992:12;:70;;-1:-1:-1;;;;;992:70:43;;;;-1:-1:-1;;;;;;992:70:43;;;;;;;;1073:17;:42;;;;;;;;1126:44;;;;;;;;;;;;;;;;;;;:11;:44::i;:::-;774:404;733:445::o;1186:653::-;1250:8;;1236:23;;-1:-1:-1;;;1236:23:43;;-1:-1:-1;;;;;1250:8:43;;;1236:23;;;172:51:48;255:64:0;;1236:13:43;;145:18:48;;1236:23:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:17;;;;;;;;;-1:-1:-1;;;;;1279:17:43;-1:-1:-1;;;;;1279:33:43;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;1272:48;;;;:::i;:::-;1466:17;;1445:40;;-1:-1:-1;;;;;1466:17:43;;;;1445:40;;;:::i;:::-;-1:-1:-1;;;;;190:32:48;;;172:51;;160:2;145:18;1445:40:43;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1426:16:43;:59;;-1:-1:-1;;;;;;1426:59:43;-1:-1:-1;;;;;1426:59:43;;;;;;;;;;-1:-1:-1;1498:117:43;1518:2;1515:1;:5;1498:117;;255:64:0;1542:7:43;1550:8;1556:1;1550:4;:8;:::i;:::-;1542:17;;;;;;;;;;;;;2150:25:48;;2138:2;2123:18;;2004:177;1542:17:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1574:16;;;;;;;;;-1:-1:-1;;;;;1574:16:43;-1:-1:-1;;;;;1574:27:43;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1522:3:43;;;;:::i;:::-;;;;1498:117;;;;1632:17;;;;;;;;;-1:-1:-1;;;;;1632:17:43;-1:-1:-1;;;;;1632:33:43;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1671:2;1632:41;1625:49;;;;:::i;:::-;1731:9;;1761:12;;1731:43;;-1:-1:-1;;;1731:43:43;;-1:-1:-1;;;;;1761:12:43;;;1731:43;;;172:51:48;1712:16:43;;1731:9;;;;;:29;;145:18:48;;1731:43:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1712:62;;1792:11;1785:19;;;;:::i;:::-;1817:14;;;-1:-1:-1;;;1817:14:43;;;;255:64:0;;1817:12:43;;:14;;;;;279:37:0;;1817:14:43;;;;;;;279:37:0;255:64;1817:14:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:624;1186:653::o;1865:600:6:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:6;;;;;;;;1865:600::o;1916:542::-;1991:17;3070:42;3058:55;3141:16;2031:382;;2251:43;;;1712:64;2251:43;;;3006:51:48;;;-1:-1:-1;;;3073:18:48;;;3066:34;2251:43:6;;;;;;;;;2979:18:48;;;2251:43:6;;;-1:-1:-1;;1712:64:6;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:6;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:6:o;302:284:43:-;399:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:9:43;:27;;-1:-1:-1;;;;;;387:27:43;-1:-1:-1;;;;;387:27:43;;;;;;;;;;482:10;;-1:-1:-1;;;;;;482:10:43;;-1:-1:-1;482:10:43;;;2150:25:48;255:64:0;;482:7:43;;2123:18:48;;482:10:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;463:8;:30;;-1:-1:-1;;;;;;463:30:43;-1:-1:-1;;;;;463:30:43;;;;;;;;;510:27;;-1:-1:-1;;;510:27:43;;;;;3006:51:48;;;;528:8:43;3073:18:48;;;3066:34;255:64:0;;510:7:43;;2979:18:48;;510:27:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;557:8:43;;548:30;;;-1:-1:-1;;;548:30:43;;-1:-1:-1;;;;;557:8:43;;;548:30;;;4753:51:48;4820:18;;;4813:30;4879:1;4859:18;;;4852:29;-1:-1:-1;;;4897:18:48;;;4890:38;255:64:0;;-1:-1:-1;548:8:43;;-1:-1:-1;4945:19:48;;548:30:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:284::o;5806:123:3:-;5862:59;5917:2;5878:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5878:42:3;;;;;;;;;;;;;;-1:-1:-1;;;;;5878:42:3;-1:-1:-1;;;5878:42:3;;;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;875:290:48:-;945:6;998:2;986:9;977:7;973:23;969:32;966:52;;;1014:1;1011;1004:12;966:52;1040:16;;-1:-1:-1;;;;;1085:31:48;;1075:42;;1065:70;;1131:1;1128;1121:12;1065:70;1154:5;875:290;-1:-1:-1;;;875:290:48:o;1170:184::-;1240:6;1293:2;1281:9;1272:7;1268:23;1264:32;1261:52;;;1309:1;1306;1299:12;1261:52;-1:-1:-1;1332:16:48;;1170:184;-1:-1:-1;1170:184:48:o;1359:127::-;1420:10;1415:3;1411:20;1408:1;1401:31;1451:4;1448:1;1441:15;1475:4;1472:1;1465:15;1699:127;1760:10;1755:3;1751:20;1748:1;1741:31;1791:4;1788:1;1781:15;1815:4;1812:1;1805:15;1831:168;1871:7;1937:1;1933;1929:6;1925:14;1922:1;1919:21;1914:1;1907:9;1900:17;1896:45;1893:71;;;1944:18;;:::i;:::-;-1:-1:-1;1984:9:48;;1831:168::o;2186:277::-;2253:6;2306:2;2294:9;2285:7;2281:23;2277:32;2274:52;;;2322:1;2319;2312:12;2274:52;2354:9;2348:16;2407:5;2400:13;2393:21;2386:5;2383:32;2373:60;;2429:1;2426;2419:12;2468:135;2507:3;2528:17;;;2525:43;;2548:18;;:::i;:::-;-1:-1:-1;2595:1:48;2584:13;;2468:135::o;3111:258::-;3183:1;3193:113;3207:6;3204:1;3201:13;3193:113;;;3283:11;;;3277:18;3264:11;;;3257:39;3229:2;3222:10;3193:113;;;3324:6;3321:1;3318:13;3315:48;;;-1:-1:-1;;3359:1:48;3341:16;;3334:27;3111:258::o;3374:371::-;-1:-1:-1;;;;;;3559:33:48;;3547:46;;3616:13;;3529:3;;3638:61;3616:13;3688:1;3679:11;;3672:4;3660:17;;3638:61;:::i;:::-;3719:16;;;;3737:1;3715:24;;3374:371;-1:-1:-1;;;3374:371:48:o;3750:274::-;3879:3;3917:6;3911:13;3933:53;3979:6;3974:3;3967:4;3959:6;3955:17;3933:53;:::i;:::-;4002:16;;;;;3750:274;-1:-1:-1;;3750:274:48:o;4975:383::-;5124:2;5113:9;5106:21;5087:4;5156:6;5150:13;5199:6;5194:2;5183:9;5179:18;5172:34;5215:66;5274:6;5269:2;5258:9;5254:18;5249:2;5241:6;5237:15;5215:66;:::i;:::-;5342:2;5321:15;-1:-1:-1;;5317:29:48;5302:45;;;;5349:2;5298:54;;4975:383;-1:-1:-1;;4975:383:48:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAttack()": "6f2db99c",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test\\03-CoinFlip.t.sol",
    "id": 23064,
    "exportedSymbols": {
      "Attack": [
        23063
      ],
      "Attacker": [
        41109
      ],
      "BaseSetUp": [
        22921
      ],
      "CoinFlip": [
        40857
      ],
      "CoinFlipFactory": [
        41170
      ],
      "DSTest": [
        4870
      ],
      "Ethernaut": [
        41340
      ],
      "ICoinFlip": [
        41063
      ],
      "Level": [
        40879
      ],
      "Owned": [
        4930
      ],
      "SafeMath": [
        3083
      ],
      "Script": [
        24012
      ],
      "StdStorage": [
        1530
      ],
      "Test": [
        1432
      ],
      "Vm": [
        24641
      ],
      "console": [
        32705
      ],
      "console2": [
        40769
      ],
      "stdError": [
        1502
      ],
      "stdMath": [
        2771
      ],
      "stdStorage": [
        2632
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1813:43",
    "nodes": [
      {
        "id": 22874,
        "nodeType": "PragmaDirective",
        "src": "33:24:43",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 22875,
        "nodeType": "ImportDirective",
        "src": "61:28:43",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23064,
        "sourceUnit": 2772,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22876,
        "nodeType": "ImportDirective",
        "src": "91:27:43",
        "absolutePath": "src/Ethernaut.sol",
        "file": "src/Ethernaut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23064,
        "sourceUnit": 41341,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22877,
        "nodeType": "ImportDirective",
        "src": "120:45:43",
        "absolutePath": "src/03-CoinFlip/CoinFlipFactory.sol",
        "file": "src/03-CoinFlip/CoinFlipFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23064,
        "sourceUnit": 41171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22878,
        "nodeType": "ImportDirective",
        "src": "167:38:43",
        "absolutePath": "src/03-CoinFlip/Attacker.sol",
        "file": "src/03-CoinFlip/Attacker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23064,
        "sourceUnit": 41110,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22921,
        "nodeType": "ContractDefinition",
        "src": "209:380:43",
        "nodes": [
          {
            "id": 22883,
            "nodeType": "VariableDeclaration",
            "src": "243:19:43",
            "constant": false,
            "mutability": "mutable",
            "name": "ethernaut",
            "nameLocation": "253:9:43",
            "scope": 22921,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ethernaut_$41340",
              "typeString": "contract Ethernaut"
            },
            "typeName": {
              "id": 22882,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22881,
                "name": "Ethernaut",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41340,
                "src": "243:9:43"
              },
              "referencedDeclaration": 41340,
              "src": "243:9:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ethernaut_$41340",
                "typeString": "contract Ethernaut"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22885,
            "nodeType": "VariableDeclaration",
            "src": "269:24:43",
            "constant": false,
            "mutability": "mutable",
            "name": "attacker",
            "nameLocation": "285:8:43",
            "scope": 22921,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 22884,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "269:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22920,
            "nodeType": "FunctionDefinition",
            "src": "302:284:43",
            "body": {
              "id": 22919,
              "nodeType": "Block",
              "src": "334:252:43",
              "statements": [
                {
                  "expression": {
                    "id": 22893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22888,
                      "name": "ethernaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22883,
                      "src": "387:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$41340",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "399:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Ethernaut_$41340_$",
                          "typeString": "function () returns (contract Ethernaut)"
                        },
                        "typeName": {
                          "id": 22890,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 22889,
                            "name": "Ethernaut",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41340,
                            "src": "403:9:43"
                          },
                          "referencedDeclaration": 41340,
                          "src": "403:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ethernaut_$41340",
                            "typeString": "contract Ethernaut"
                          }
                        }
                      },
                      "id": 22892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "399:15:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ethernaut_$41340",
                        "typeString": "contract Ethernaut"
                      }
                    },
                    "src": "387:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ethernaut_$41340",
                      "typeString": "contract Ethernaut"
                    }
                  },
                  "id": 22894,
                  "nodeType": "ExpressionStatement",
                  "src": "387:27:43"
                },
                {
                  "expression": {
                    "id": 22903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22895,
                      "name": "attacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22885,
                      "src": "463:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 22900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "490:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 22898,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23807,
                              "src": "482:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$24641",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 22899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24079,
                            "src": "482:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 22901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "482:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 22897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "474:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 22896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "474:8:43",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 22902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "474:19:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "463:30:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 22904,
                  "nodeType": "ExpressionStatement",
                  "src": "463:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22908,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22885,
                        "src": "518:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 22909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "528:8:43",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 22905,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23807,
                        "src": "510:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$24641",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24261,
                      "src": "510:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 22910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "510:27:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22911,
                  "nodeType": "ExpressionStatement",
                  "src": "510:27:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22915,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22885,
                        "src": "557:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "41747461636b6572",
                        "id": 22916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "567:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f1c3039bf95e60ffa2cf137c485683e4ff8d3d148591d73a24b2bda95a73652",
                          "typeString": "literal_string \"Attacker\""
                        },
                        "value": "Attacker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f1c3039bf95e60ffa2cf137c485683e4ff8d3d148591d73a24b2bda95a73652",
                          "typeString": "literal_string \"Attacker\""
                        }
                      ],
                      "expression": {
                        "id": 22912,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23807,
                        "src": "548:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$24641",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24372,
                      "src": "548:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 22917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "548:30:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22918,
                  "nodeType": "ExpressionStatement",
                  "src": "548:30:43"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "311:5:43",
            "parameters": {
              "id": 22886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:2:43"
            },
            "returnParameters": {
              "id": 22887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:0:43"
            },
            "scope": 22921,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22879,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1432,
              "src": "231:4:43"
            },
            "id": 22880,
            "nodeType": "InheritanceSpecifier",
            "src": "231:4:43"
          }
        ],
        "canonicalName": "BaseSetUp",
        "contractDependencies": [
          41340
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          22921,
          1432,
          24012,
          4870
        ],
        "name": "BaseSetUp",
        "nameLocation": "218:9:43",
        "scope": 23064,
        "usedErrors": []
      },
      {
        "id": 23063,
        "nodeType": "ContractDefinition",
        "src": "593:1249:43",
        "nodes": [
          {
            "id": 22926,
            "nodeType": "VariableDeclaration",
            "src": "631:26:43",
            "constant": false,
            "mutability": "mutable",
            "name": "ethernautCoinFlip",
            "nameLocation": "640:17:43",
            "scope": 23063,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CoinFlip_$40857",
              "typeString": "contract CoinFlip"
            },
            "typeName": {
              "id": 22925,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22924,
                "name": "CoinFlip",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40857,
                "src": "631:8:43"
              },
              "referencedDeclaration": 40857,
              "src": "631:8:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoinFlip_$40857",
                "typeString": "contract CoinFlip"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22929,
            "nodeType": "VariableDeclaration",
            "src": "664:25:43",
            "constant": false,
            "mutability": "mutable",
            "name": "attackerContract",
            "nameLocation": "673:16:43",
            "scope": 23063,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Attacker_$41109",
              "typeString": "contract Attacker"
            },
            "typeName": {
              "id": 22928,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22927,
                "name": "Attacker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41109,
                "src": "664:8:43"
              },
              "referencedDeclaration": 41109,
              "src": "664:8:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Attacker_$41109",
                "typeString": "contract Attacker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22931,
            "nodeType": "VariableDeclaration",
            "src": "696:28:43",
            "constant": false,
            "mutability": "mutable",
            "name": "levelAddress",
            "nameLocation": "712:12:43",
            "scope": 23063,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 22930,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "696:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22983,
            "nodeType": "FunctionDefinition",
            "src": "733:445:43",
            "body": {
              "id": 22982,
              "nodeType": "Block",
              "src": "774:404:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 22935,
                        "name": "BaseSetUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22921,
                        "src": "785:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseSetUp_$22921_$",
                          "typeString": "type(contract BaseSetUp)"
                        }
                      },
                      "id": 22937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22920,
                      "src": "785:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 22938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:17:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22939,
                  "nodeType": "ExpressionStatement",
                  "src": "785:17:43"
                },
                {
                  "assignments": [
                    22942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22942,
                      "mutability": "mutable",
                      "name": "coinFlipFactory",
                      "nameLocation": "860:15:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 22982,
                      "src": "844:31:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlipFactory_$41170",
                        "typeString": "contract CoinFlipFactory"
                      },
                      "typeName": {
                        "id": 22941,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 22940,
                          "name": "CoinFlipFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41170,
                          "src": "844:15:43"
                        },
                        "referencedDeclaration": 41170,
                        "src": "844:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$41170",
                          "typeString": "contract CoinFlipFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22947,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "878:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CoinFlipFactory_$41170_$",
                        "typeString": "function () returns (contract CoinFlipFactory)"
                      },
                      "typeName": {
                        "id": 22944,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 22943,
                          "name": "CoinFlipFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41170,
                          "src": "882:15:43"
                        },
                        "referencedDeclaration": 41170,
                        "src": "882:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$41170",
                          "typeString": "contract CoinFlipFactory"
                        }
                      }
                    },
                    "id": 22946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:21:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlipFactory_$41170",
                      "typeString": "contract CoinFlipFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "844:55:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22951,
                        "name": "coinFlipFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22942,
                        "src": "934:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$41170",
                          "typeString": "contract CoinFlipFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CoinFlipFactory_$41170",
                          "typeString": "contract CoinFlipFactory"
                        }
                      ],
                      "expression": {
                        "id": 22948,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22883,
                        "src": "910:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$41340",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 22950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41232,
                      "src": "910:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Level_$40879_$returns$__$",
                        "typeString": "function (contract Level) external"
                      }
                    },
                    "id": 22952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:40:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22953,
                  "nodeType": "ExpressionStatement",
                  "src": "910:40:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22957,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22885,
                        "src": "972:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22954,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23807,
                        "src": "963:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$24641",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24232,
                      "src": "963:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 22958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:18:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22959,
                  "nodeType": "ExpressionStatement",
                  "src": "963:18:43"
                },
                {
                  "expression": {
                    "id": 22968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22960,
                      "name": "levelAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22931,
                      "src": "992:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 22965,
                              "name": "coinFlipFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22942,
                              "src": "1045:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlipFactory_$41170",
                                "typeString": "contract CoinFlipFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CoinFlipFactory_$41170",
                                "typeString": "contract CoinFlipFactory"
                              }
                            ],
                            "expression": {
                              "id": 22963,
                              "name": "ethernaut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22883,
                              "src": "1015:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ethernaut_$41340",
                                "typeString": "contract Ethernaut"
                              }
                            },
                            "id": 22964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createLevelInstance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41281,
                            "src": "1015:29:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_contract$_Level_$40879_$returns$_t_address_$",
                              "typeString": "function (contract Level) payable external returns (address)"
                            }
                          },
                          "id": 22966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1015:46:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 22962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1007:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 22961,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1007:8:43",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 22967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1007:55:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "992:70:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 22969,
                  "nodeType": "ExpressionStatement",
                  "src": "992:70:43"
                },
                {
                  "expression": {
                    "id": 22974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22970,
                      "name": "ethernautCoinFlip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22926,
                      "src": "1073:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlip_$40857",
                        "typeString": "contract CoinFlip"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 22972,
                          "name": "levelAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22931,
                          "src": "1102:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 22971,
                        "name": "CoinFlip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40857,
                        "src": "1093:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CoinFlip_$40857_$",
                          "typeString": "type(contract CoinFlip)"
                        }
                      },
                      "id": 22973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1093:22:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CoinFlip_$40857",
                        "typeString": "contract CoinFlip"
                      }
                    },
                    "src": "1073:42:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CoinFlip_$40857",
                      "typeString": "contract CoinFlip"
                    }
                  },
                  "id": 22975,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:42:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "45746865726e61757420436f696e466c6970204368616c6c656e676521",
                        "id": 22979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1138:31:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca456a83235d19b077c8e9780ee95b252e2588b9913bcf3266789a2301ec484b",
                          "typeString": "literal_string \"Ethernaut CoinFlip Challenge!\""
                        },
                        "value": "Ethernaut CoinFlip Challenge!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ca456a83235d19b077c8e9780ee95b252e2588b9913bcf3266789a2301ec484b",
                          "typeString": "literal_string \"Ethernaut CoinFlip Challenge!\""
                        }
                      ],
                      "expression": {
                        "id": 22976,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32705,
                        "src": "1126:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$32705_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 22978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25236,
                      "src": "1126:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 22980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:44:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22981,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:44:43"
                }
              ]
            },
            "baseFunctions": [
              22920
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "742:5:43",
            "overrides": {
              "id": 22933,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "765:8:43"
            },
            "parameters": {
              "id": 22932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:2:43"
            },
            "returnParameters": {
              "id": 22934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:0:43"
            },
            "scope": 23063,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 23062,
            "nodeType": "FunctionDefinition",
            "src": "1186:653:43",
            "body": {
              "id": 23061,
              "nodeType": "Block",
              "src": "1215:624:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22989,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22885,
                        "src": "1250:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 22986,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23807,
                        "src": "1236:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$24641",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 22988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24237,
                      "src": "1236:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 22990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:23:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22991,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:23:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 22993,
                              "name": "ethernautCoinFlip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22926,
                              "src": "1279:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlip_$40857",
                                "typeString": "contract CoinFlip"
                              }
                            },
                            "id": 22994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "consecutiveWins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40777,
                            "src": "1279:33:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 22995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1279:35:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 22996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1318:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1279:40:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 22992,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1272:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 22998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:48:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22999,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:48:43"
                },
                {
                  "expression": {
                    "id": 23009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23000,
                      "name": "attackerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22929,
                      "src": "1426:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Attacker_$41109",
                        "typeString": "contract Attacker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 23006,
                              "name": "ethernautCoinFlip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22926,
                              "src": "1466:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlip_$40857",
                                "typeString": "contract CoinFlip"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CoinFlip_$40857",
                                "typeString": "contract CoinFlip"
                              }
                            ],
                            "id": 23005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1458:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23004,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1458:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1458:26:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1445:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Attacker_$41109_$",
                          "typeString": "function (address) returns (contract Attacker)"
                        },
                        "typeName": {
                          "id": 23002,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23001,
                            "name": "Attacker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41109,
                            "src": "1449:8:43"
                          },
                          "referencedDeclaration": 41109,
                          "src": "1449:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Attacker_$41109",
                            "typeString": "contract Attacker"
                          }
                        }
                      },
                      "id": 23008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1445:40:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Attacker_$41109",
                        "typeString": "contract Attacker"
                      }
                    },
                    "src": "1426:59:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Attacker_$41109",
                      "typeString": "contract Attacker"
                    }
                  },
                  "id": 23010,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:59:43"
                },
                {
                  "body": {
                    "id": 23035,
                    "nodeType": "Block",
                    "src": "1527:88:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 23027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31323334",
                                "id": 23024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1550:4:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1234_by_1",
                                  "typeString": "int_const 1234"
                                },
                                "value": "1234"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "id": 23025,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23012,
                                    "src": "1556:1:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 23026,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1555:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1550:8:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 23021,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23807,
                              "src": "1542:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$24641",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 23023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "roll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24031,
                            "src": "1542:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 23028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1542:17:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23029,
                        "nodeType": "ExpressionStatement",
                        "src": "1542:17:43"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 23030,
                              "name": "attackerContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22929,
                              "src": "1574:16:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Attacker_$41109",
                                "typeString": "contract Attacker"
                              }
                            },
                            "id": 23032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "flipAttack",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41108,
                            "src": "1574:27:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () external returns (bool)"
                            }
                          },
                          "id": 23033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1574:29:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23034,
                        "nodeType": "ExpressionStatement",
                        "src": "1574:29:43"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23015,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23012,
                      "src": "1515:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 23016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1518:2:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "1515:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23036,
                  "initializationExpression": {
                    "assignments": [
                      23012
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 23012,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1508:1:43",
                        "nodeType": "VariableDeclaration",
                        "scope": 23036,
                        "src": "1503:6:43",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23011,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1503:4:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 23014,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 23013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1512:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1503:10:43"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 23019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1522:3:43",
                      "subExpression": {
                        "id": 23018,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23012,
                        "src": "1522:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23020,
                    "nodeType": "ExpressionStatement",
                    "src": "1522:3:43"
                  },
                  "nodeType": "ForStatement",
                  "src": "1498:117:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 23038,
                              "name": "ethernautCoinFlip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22926,
                              "src": "1632:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoinFlip_$40857",
                                "typeString": "contract CoinFlip"
                              }
                            },
                            "id": 23039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "consecutiveWins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40777,
                            "src": "1632:33:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 23040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1632:35:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 23041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1671:2:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1632:41:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23037,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1625:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23044,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:49:43"
                },
                {
                  "assignments": [
                    23046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23046,
                      "mutability": "mutable",
                      "name": "passedLevel",
                      "nameLocation": "1717:11:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 23061,
                      "src": "1712:16:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23045,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1712:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23051,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23049,
                        "name": "levelAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22931,
                        "src": "1761:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 23047,
                        "name": "ethernaut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22883,
                        "src": "1731:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ethernaut_$41340",
                          "typeString": "contract Ethernaut"
                        }
                      },
                      "id": 23048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitLevelInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41339,
                      "src": "1731:29:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$_t_bool_$",
                        "typeString": "function (address payable) external returns (bool)"
                      }
                    },
                    "id": 23050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:43:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1712:62:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23053,
                        "name": "passedLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23046,
                        "src": "1792:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23052,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1785:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:19:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23055,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:19:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23056,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23807,
                        "src": "1817:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$24641",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24254,
                      "src": "1817:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 23059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1817:14:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23060,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:14:43"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "1195:10:43",
            "parameters": {
              "id": 22984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:2:43"
            },
            "returnParameters": {
              "id": 22985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:0:43"
            },
            "scope": 23063,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22922,
              "name": "BaseSetUp",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22921,
              "src": "612:9:43"
            },
            "id": 22923,
            "nodeType": "InheritanceSpecifier",
            "src": "612:9:43"
          }
        ],
        "canonicalName": "Attack",
        "contractDependencies": [
          41109,
          41170,
          41340
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23063,
          22921,
          1432,
          24012,
          4870
        ],
        "name": "Attack",
        "nameLocation": "602:6:43",
        "scope": 23064,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 43
}